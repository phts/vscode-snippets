{
  "react: class component": {
    "body": [
      "interface Props {",
      "}",
      "",
      "interface State {",
      "}",
      "",
      "class ${1:$TM_FILENAME_BASE} extends React.Component<Props, State> {",
      "\tstate = {}",
      "",
      "\tconstructor(props) {",
      "\t\tsuper(props)",
      "\t}",
      "",
      "\tcomponentDidMount() {",
      "\t}",
      "",
      "\trender() {$0",
      "\t\treturn (",
      "\t\t\t<div>{this.props.children}</div>",
      "\t\t)",
      "\t}",
      "}",
      "",
      "export default ${1:$TM_FILENAME_BASE}"
    ],
    "description": "class Component…",
    "prefix": "component"
  },
  "react: functional component": {
    "body": [
      "interface Props {",
      "}",
      "",
      "const ${1:$TM_FILENAME_BASE}: React.FunctionComponent<Props> = ({ children }) => (",
      "\t<div>$0",
      "\t\t{children}",
      "\t</div>",
      ")",
      "",
      "export default ${1:$TM_FILENAME_BASE}"
    ],
    "description": "const Component…",
    "prefix": "componentfunc"
  },
  "react: functional component with return": {
    "body": [
      "interface Props {",
      "}",
      "",
      "const ${1:$TM_FILENAME_BASE}: React.FunctionComponent<Props> = ({ children }) => {",
      "\tconst [state, setState] = useState({})",
      "\treturn <div>$0",
      "\t\t{children}",
      "\t</div>",
      "}",
      "",
      "export default ${1:$TM_FILENAME_BASE}"
    ],
    "description": "const Component…",
    "prefix": "componentfunchooks"
  }
}
